--- richards.java.orig	2015-10-21 13:54:24.291801337 +0100
+++ richards.java	2015-10-21 14:06:20.722910146 +0100
@@ -6,10 +6,6 @@
 //  Translation from C++, Mario Wolczko
 //  Outer loop added by Alex Jacoby
 
-package COM.sun.labs.kanban.richards_deutsch_acc_virtual;
-
-import Benchmark;
-
 //----- Packet -------------------------------------------------------
 
 class Packet {
@@ -106,7 +102,7 @@
   private int destination;
   private int count;
 
-  WorkerTaskRec() { destination = Richards.I_HANDLERA; count = 0; }
+  WorkerTaskRec() { destination = richards.I_HANDLERA; count = 0; }
 
   int       Count() { return count; }
   int Destination() { return destination; }
@@ -204,6 +200,13 @@
   static int  get_queuePacketCount()      { return qpktCount; }
   static void set_queuePacketCount(int i) { qpktCount = i; }
 
+  public static void reset() {
+      Task.taskTab = new Task[TaskTabSize];
+      Task.taskList = null;
+      Task.holdCount = 0;
+      Task.qpktCount = 0;
+  }
+
   Task(int i, int p, Packet w, TaskState initialState, TaskRec r) {
     link = taskList;
     SetIdent(i);
@@ -327,7 +330,7 @@
   Task fn(Packet pkt, TaskRec r) {
     HandlerTaskRec h = (HandlerTaskRec)r;
     if (pkt != null) {
-      if (pkt.Kind() == Richards.K_WORK)
+      if (pkt.Kind() == richards.K_WORK)
 	h.WorkInAdd(pkt);
       else
         h.DeviceInAdd(pkt);
@@ -371,10 +374,10 @@
       return hold();
     } else if ((i.Control() & 1) == 0) {
       i.SetControl(i.Control() / 2);
-      return release(Richards.I_DEVA);
+      return release(richards.I_DEVA);
     } else {
       i.SetControl((i.Control() / 2) ^ 0XD008);
-      return release(Richards.I_DEVB);
+      return release(richards.I_DEVB);
     }
   }
 
@@ -395,9 +398,9 @@
     if (pkt == null)
       return waitTask();
 
-    int dest = (w.Destination() == Richards.I_HANDLERA
-		? Richards.I_HANDLERB
-		: Richards.I_HANDLERA);
+    int dest = (w.Destination() == richards.I_HANDLERA
+		? richards.I_HANDLERB
+		: richards.I_HANDLERA);
     w.SetDestination(dest);
     pkt.SetIdent(dest);
     pkt.SetDatum(0);
@@ -414,18 +417,40 @@
 //----- Richards -----------------------------------------------------
 
 
-public class Richards implements Benchmark
+public class richards implements Benchmark
 {
+  static void init() {};
+
   private long total_ms;
   public long getRunTime() { return total_ms; }
 
+  private static final int EXPECT_QPKT = 23246;
+  private static final int EXPECT_HOLD = 9297;
+
+
   public static void main(String[] args) {
-    (new Richards()).inst_main(args);
+    (new richards()).inst_main(args);
   }
 
-  static int iterations = 10;
+  int iterations;
+
+  // krun entry point
+  public void runIter(int param) {
+      iterations = param;
+      boolean result = run();
+      //assert(result);
+      // Assertions are off by default in java
+      // ensure this check really happens
+      if (!result) {
+          System.out.println("failed!");
+      }
+  }
 
   public void inst_main(String[] args) { 
+    if (args.length > 0)
+        iterations = Integer.parseInt(args[0]);
+    else
+        iterations = 10;
     System.out.println("Richards benchmark (deutsch_acc_virtual) starting...");
     long startTime = System.currentTimeMillis();
     if (!run())
@@ -458,9 +483,7 @@
 
   public boolean run() {
     for (int i= 0; i < iterations; i++){
-      Task.set_holdCount(0);
-      Task.set_queuePacketCount(0);  // Added to allow repeated execution
-				     // of the test.    Ole Agesen, 3/95.
+      Task.reset();
 
       new IdleTask(I_IDLE, 1, 10000, (new TaskState()).Running(),
 		   new IdleTaskRec());
@@ -493,11 +516,11 @@
 
       schedule();
 
-      if (Task.get_queuePacketCount() == 23246 && Task.get_holdCount() == 9297) 
-        ; // correct
-      else {
-        System.out.println("Incorrect results!");
-        return false;
+      int qpkt_count = Task.get_queuePacketCount();
+      int hold_count = Task.get_holdCount();
+      if ((qpkt_count != EXPECT_QPKT) || (hold_count != EXPECT_HOLD)) {
+          System.out.printf("bad checksums: %d:%d %d:%d\n",
+                  qpkt_count, EXPECT_QPKT, hold_count, EXPECT_HOLD);
       }
     }
     return true;
