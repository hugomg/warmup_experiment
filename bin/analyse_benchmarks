#!/usr/bin/env python

from distutils.spawn import find_executable
from logging import debug, error, info, warn

import argparse
import logging
import os
import sys

ABS_TIME_FORMAT = "%Y-%m-%d %H:%M:%S"
BINDIR = os.path.dirname(os.path.abspath(__file__))

CONSOLE_FORMATTER = PLAIN_FORMATTER = logging.Formatter(
    '[%(asctime)s: %(levelname)s] %(message)s',
    ABS_TIME_FORMAT)
try:
    import colorlog
    CONSOLE_FORMATTER = colorlog.ColoredFormatter(
        "%(log_color)s[%(asctime)s %(levelname)s] %(message)s%(reset)s",
        ABS_TIME_FORMAT)
except ImportError:
    pass


def fatal(msg):
    error(msg)
    sys.exit(1)


def create_arg_parser():
    parser = argparse.ArgumentParser(description='Analyse benchmarks and dump results.')
    parser.add_argument('--debug', '-g', action='store', default='INFO',
                        dest='debug_level', required=False,
                        help=('Debug level used by logger. Must be one of: ' +
                              'DEBUG, INFO, WARN, DEBUG, CRITICAL, ERROR'))
    return parser


def setup_logging(args):
    # We default to 'info' level, user can change by passing
    # in a different argument to --debug on the command line.
    level_str = args.debug_level.upper()
    if level_str not in ('DEBUG', 'INFO', 'WARN', 'DEBUG', 'CRITICAL', 'ERROR'):
        fatal('Bad debug level: %s' % level_str)
    level = getattr(logging, level_str.upper())
    logging.root.setLevel(level)
    stream = logging.StreamHandler()
    stream.setLevel(level)
    stream.setFormatter(CONSOLE_FORMATTER)
    logging.root.handlers = [stream]


def check_environment(need_outliers=True, need_changepoints=True, need_latex=True,
                      need_plots=True):
    pypy_path = None
    pdflatex_path = None
    if need_outliers:
        pypy_path = find_executable('pypy')
        if pypy_path is None:
            warn('You do not appear to have PyPy installed. Some parts of this '
                 'script may run slowly.')
    if need_changepoints or need_plots:
        try:
            import numpy
        except ImportError:
            fatal('Please install the Python numpy library to generate changepoints and / or plots.')
    if need_changepoints:
        try:
            import rpy2
        except ImportError:
            fatal('Please install the Python rpy2 library to generate changepoints.')
    if need_latex:
        pdflatex_path = find_executable('pdflatex')
        if pdflatex_path is None:
            fatal('You do not appear to have pdflatex installed, and so cannot '
                  'compile LaTeX files.')
    if need_plots:
        try:
            import matplotlib
        except ImportError:
            fatal('Please install the Python matplotlib library to generate plots.')
        try:
            import seaborn
        except ImportError:
            fatal('Please install the Python seaborn library to generate plots.')


def main():
    parser = create_arg_parser()
    args = parser.parse_args()
    setup_logging(args)
    check_environment()


if __name__ == '__main__':
    debug('Krun starting...')
    debug('arguments: %s'  % ' '.join(sys.argv[1:]))
    main()
